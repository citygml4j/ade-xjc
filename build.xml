<?xml version="1.0" encoding="UTF-8"?>
<!--
 * ade-xjc - XML Schema binding compiler for CityGML ADEs
 * https://github.com/citygml4j/ade-xjc
 * 
 * ade-xjc is part of the citygml4j project
 * 
 * Copyright 2013-2016 Claus Nagel <claus.nagel@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 *     
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->
<project name="ade-xjc" default="dist" basedir=".">

	<!-- application specific variables -->
	<property name="app.name" value="ade-xjc" />
	<property name="app.version" value="2.3.1" />
	<property name="app.jar" value="${app.name}.jar" />
	<property name="app.title" value="XML Schema binding compiler for CityGML ADEs" />
	<property name="app.manifest.title" value="${app.title}; use with citygml4j version ${app.version}" />
	<property name="app.class" value="org.citygml4j.ade_xjc.ADE_XJC" />
	<property name="copyright.year" value="2013-2016" />
	<property name="copyright.owner" value="Claus Nagel" />
	<property name="copyright.owner.email" value="claus.nagel@gmail.com" />
	<property name="developer.main.name" value="Claus Nagel" />
	<property name="developer.main.email" value="claus.nagel@gmail.com" />

	<!-- dirs -->
	<property name="project.basedir" location=".." />
	<property name="src" location="src" />
	<property name="lib" location="lib" />
	<property name="schemas" location="schemas" />

	<property name="sample" location="sample" />

	<property name="resources" location="resources" />
	<property name="resources.doc" location="${resources}/doc" />
	<property name="resources.license" location="${resources}/license" />

	<property name="build" location="build" />
	<property name="build.classes" location="${build}/classes" />

	<property name="dist" location="${app.name}-${app.version}" />
	<property name="dist.lib" location="${dist}/lib" />
	<property name="dist.license" location="${dist}/license" />
	<property name="dist.schemas" location="${dist}/schemas" />
	<property name="dist.sample" location="${dist}/sample" />

	<!-- classpath -->
	<path id="classpath">
		<fileset dir="lib" includes="*.jar" />
	</path>

	<tstamp>
		<format property="date" pattern="yyyy-MM-dd" />
		<format property="time" pattern="HH:mm:ss" />
	</tstamp>

	<target name="clean" description="clean up">
		<!-- delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist.license}" />
		<delete dir="${dist.schemas}" />
		<delete dir="${dist.sample}" />
		<delete dir="${dist}" />
	</target>

	<target name="compile" description="compile the source">
		<delete dir="${build}" />
		<mkdir dir="${build.classes}" />

		<!-- compile the java code from ${src} and ${src-gen} into ${build} -->
		<javac classpathref="classpath" srcdir="${src}" destdir="${build.classes}" />
	</target>

	<target name="dist" depends="clean, compile" description="generate the distribution">
		<!-- create the distribution directory -->
		<delete dir="${dist}" />
		<mkdir dir="${dist}" />

		<!-- copy LICENSE file -->
		<copy todir="${dist.license}">
			<fileset dir="${resources.license}" includes="**/*" />
		</copy>

		<!-- copy README template -->
		<copy toDir="${dist}">
			<fileset dir="${resources.doc}" includes="**/*" />
		</copy>

		<!-- copy sample -->
		<copy todir="${dist.sample}">
			<fileset dir="${sample}" includes="**/*" />
		</copy>

		<!-- replace tokens in template files -->
		<replace file="${dist}/README" token="!app.name!" value="${app.name}" />
		<replace file="${dist}/README" token="!app.title!" value="${app.title}" />
		<replace file="${dist}/README" token="!app.jar!" value="${app.jar}" />
		<replace file="${dist}/README" token="!app.version!" value="${app.version}" />
		<replace file="${dist}/README" token="!build.date!" value="${date}" />
		<replace file="${dist}/README" token="!copyright.year!" value="${copyright.year}" />
		<replace file="${dist}/README" token="!copyright.owner!" value="${copyright.owner}" />
		<replace file="${dist}/README" token="!copyright.owner.email!" value="${copyright.owner.email}" />
		<replace file="${dist}/README" token="!developer.main.name!" value="${developer.main.name}" />
		<replace file="${dist}/README" token="!developer.main.email!" value="${developer.main.email}" />
		<replace file="${dist.sample}/build.xml" token="!app.jar!" value="${app.jar}" />

		<!-- copy schema files -->
		<copy todir="${dist.schemas}">
			<fileset dir="${schemas}" includes="**/*" />
		</copy>

		<buildnumber file="build.num" />

		<!-- set package variables -->
		<pathconvert property="manifest.classpath" dirsep="/" pathsep=" " refid="classpath">
			<map from="${basedir}${file.separator}lib${file.separator}" to="lib${file.separator}" />
		</pathconvert>
		<buildnumber file="build.num" />

		<!-- put everything in ${build} into .jar file -->
		<jar jarfile="${dist}/${app.jar}" basedir="${build.classes}" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Build-Id" value="${app.name}-${app.version}" />
				<attribute name="Build-Date" value="${date} ${time}" />
				<attribute name="Implementation-Title" value="${app.manifest.title}" />
				<attribute name="Implementation-Version" value="${app.version}+${build.number}" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
				<attribute name="Main-Class" value="${app.class}" />
			</manifest>
			<fileset dir="${dist}" includes="README" />
			<fileset dir="${dist.license}" includes="**/*" />
		</jar>

		<!-- copy mandatory dependencies -->
		<copy toDir="${dist.lib}">
			<fileset dir="${lib}" includes="*.jar" />
		</copy>

		<!-- clean up template dir -->
		<delete dir="${build}" />
	</target>
</project>
